package controller;

import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;

public class SuperMarketController implements Initializable{
    
    private static String newItemPrice = null;

	@FXML
    private Button btn_addItem;

    @FXML
    private Button btn_delete;

    @FXML
    private Button btn_sum;
    
    @FXML
    private Button btn_addNewItem;
    
    @FXML
    private Button btn_removeItem;

    @FXML
    private ComboBox<String> comboBox_items;

    @FXML
    private Label label_grandTotal;

    @FXML
    private Label label_item1;

    @FXML
    private Label label_item2;

    @FXML
    private Label label_item3;

    @FXML
    private Label label_item4;

    @FXML
    private Label label_item5;

    @FXML
    private Label label_price;

    @FXML
    private Label label_price1;

    @FXML
    private Label label_price2;

    @FXML
    private Label label_price3;

    @FXML
    private Label label_price4;

    @FXML
    private Label label_price5;

    @FXML
    private Label label_quantity1;

    @FXML
    private Label label_quantity2;

    @FXML
    private Label label_quantity3;

    @FXML
    private Label label_quantity4;

    @FXML
    private Label label_quantity5;

    @FXML
    private Label label_total;

    @FXML
    private TextField txt_quantity;
	
	String itemSelected;
	String newItemSelected;
	LinkedList<String>ShopItems = new LinkedList<String>();
	
	double price1, quantity1, grandTotal;

	@FXML 
	private TextField txt_newPrice;

	@FXML 
	private TextField txt_newItem;

	 //The code below enable a user to update the LinkedList in the ComboBox 
	  @FXML
	  public  void addNewItem(ActionEvent event) {
		  if(txt_newItem.getText()!="" && txt_newPrice.getText()!="") {
		comboBox_items.getItems().addAll(txt_newItem.getText());
	 newItemPrice = txt_newPrice.getText();
	 JOptionPane.showMessageDialog(null, "New Item Added Successfully");
		 
		  } 
		  
		  else if(txt_newItem.getText()=="" && txt_newPrice.getText()=="") {
			 JOptionPane.showMessageDialog(null, "Enter New Item and Price"); 
		  }
		  
		  else if(txt_newPrice.getText()=="" && txt_newItem.getText()!="") {
			  JOptionPane.showMessageDialog(null, "Enter Price for new Item");
		  } 
		  
		  else if(txt_newItem.getText()=="" && txt_newPrice.getText()!="") {
				 JOptionPane.showMessageDialog(null, "Enter New Item and Price"); 
			  }
	  }
	  
	// Event Listener on ComboBox[#comboBox_items].onAction
	@FXML
	public void selectItems(ActionEvent event) {
		// TODO Autogenerated
		
		itemSelected=comboBox_items.getValue();
		if(itemSelected.equals("Sardine")) {
		label_price.setText("1500");
		
		} else if(itemSelected.equals("Egg")) {
			label_price.setText("100");
			
		} else if(itemSelected.equals("Groundnut")) {
		label_price.setText("5000");
		
		} else if(itemSelected.equals(txt_newItem.getText())) {
			itemSelected = txt_newItem.getText();
			label_price.setText(newItemPrice);
		}
	}
	// Event Listener on ComboBox[#comboBox_quantity].onAction
	
	@FXML
	public void selectQuantity(ActionEvent event) {
		// TODO Autogenerated

	}
	// Event Listener on Button[#btn_add].onAction
	@FXML
	public void addItem(ActionEvent event) {
		// TODO Autogenerated
		//convert the input quantity and price to double
		double qty = Double.parseDouble(txt_quantity.getText());
		double price = Double.parseDouble(label_price.getText());
		
		//multiply the price by the quantity to get total price
		double total = qty * price;
		String totalSet=String.valueOf(total);
		label_total.setText(totalSet);
		
		if(itemSelected == "Sardine") 
		{
		if(label_item1.getText().isBlank() && label_item1.getText()!="Sardine" && label_item2.getText()!="Sardine" 
				&&label_item3.getText()!="Sardine" &&label_item4.getText()!="Sardine" &&label_item5.getText()!="Sardine") {
			label_item1.setText(itemSelected);	
			label_price1.setText(totalSet);
			label_quantity1.setText(txt_quantity.getText());
		} else if(label_item2.getText().isBlank() && label_item1.getText()!="Sardine" && label_item2.getText()!="Sardine" 
					&&label_item3.getText()!="Sardine" &&label_item4.getText()!="Sardine" &&label_item5.getText()!="Sardine") {
				label_item2.setText(itemSelected);	
				label_price2.setText(totalSet);
				label_quantity2.setText(txt_quantity.getText());
				
		} else if(label_item3.getText().isBlank() && label_item1.getText()!="Sardine" && label_item2.getText()!="Sardine" 
					&&label_item3.getText()!="Sardine" &&label_item4.getText()!="Sardine" &&label_item5.getText()!="Sardine") {
				label_item3.setText(itemSelected);
				label_price3.setText(totalSet);
				label_quantity3.setText(txt_quantity.getText());
				
			} else if(label_item4.getText().isBlank() && label_item1.getText()!="Sardine" && label_item2.getText()!="Sardine" 
					&&label_item3.getText()!="Sardine" &&label_item4.getText()!="Sardine" &&label_item5.getText()!="Sardine") {
				label_item4.setText(itemSelected);
				label_price4.setText(totalSet);
				label_quantity4.setText(txt_quantity.getText());
				
			} else if(label_item5.getText().isBlank() && label_item1.getText()!="Sardine" && label_item2.getText()!="Sardine" 
					&&label_item5.getText()!="Sardine" &&label_item4.getText()!="Sardine" &&label_item5.getText()!="Sardine") {
				label_item5.setText(itemSelected);
				label_price5.setText(totalSet);
				label_quantity5.setText(txt_quantity.getText());
		}
		
		//Check if selected item is Egg
		} if(itemSelected == "Egg") 
		{
		if(label_item1.getText().isBlank() && label_item1.getText()!="Egg" && label_item2.getText()!="Egg" 
				&&label_item3.getText()!="Egg" &&label_item4.getText()!="Egg" &&label_item5.getText()!="Egg") {
			label_item1.setText(itemSelected);	
			label_price1.setText(totalSet);
			label_quantity1.setText(txt_quantity.getText());
		} else if(label_item2.getText().isBlank() && label_item1.getText()!="Egg" && label_item2.getText()!="Egg" 
					&&label_item3.getText()!="Egg" &&label_item4.getText()!="Egg" &&label_item5.getText()!="Egg") {
				label_item2.setText(itemSelected);	
				label_price2.setText(totalSet);
				label_quantity2.setText(txt_quantity.getText());
				
		} else if(label_item3.getText().isBlank() && label_item1.getText()!="Egg" && label_item2.getText()!="Egg" 
					&&label_item3.getText()!="Egg" &&label_item4.getText()!="Egg" &&label_item5.getText()!="Egg") {
				label_item3.setText(itemSelected);
				label_price3.setText(totalSet);
				label_quantity3.setText(txt_quantity.getText());
				
		} else if(label_item4.getText().isBlank() && label_item1.getText()!="Egg" && label_item2.getText()!="Egg" 
					&&label_item3.getText()!="Egg" &&label_item4.getText()!="Egg" &&label_item5.getText()!="Egg") {
				label_item4.setText(itemSelected);
				label_price4.setText(totalSet);
				label_quantity4.setText(txt_quantity.getText());
				
		} else if(label_item5.getText().isBlank() && label_item1.getText()!="Egg" && label_item2.getText()!="Egg" 
					&&label_item5.getText()!="Egg" &&label_item4.getText()!="Egg" &&label_item5.getText()!="Egg") {
				label_item5.setText(itemSelected);
				label_price5.setText(totalSet);
				label_quantity5.setText(txt_quantity.getText());
		}
		
		//Check if selected item is Groundnut
		} else if(itemSelected == "Groundnut") 
		{
		if(label_item1.getText().isBlank() && label_item1.getText()!="Groundnut" && label_item2.getText()!="Groundnut" 
				&&label_item3.getText()!="Groundnut" &&label_item4.getText()!="Groundnut" &&label_item5.getText()!="Ground") {
			label_item1.setText(itemSelected);	
			label_price1.setText(totalSet);
			label_quantity1.setText(txt_quantity.getText());
			
		} else if(label_item2.getText().isBlank() && label_item1.getText()!="Groundnut" && label_item2.getText()!="Groundnut" 
					&&label_item3.getText()!="Groundnut" &&label_item4.getText()!="Groundnut" &&label_item5.getText()!="Groundnut") {
				label_item2.setText(itemSelected);	
				label_price2.setText(totalSet);
				label_quantity2.setText(txt_quantity.getText());
				
		} else if(label_item3.getText().isBlank() && label_item1.getText()!="Groundnut" && label_item2.getText()!="Groundnut" 
					&&label_item3.getText()!="Groundnut" &&label_item4.getText()!="Groundnut" &&label_item5.getText()!="Groundnut") {
				label_item3.setText(itemSelected);
				label_price3.setText(totalSet);
				label_quantity3.setText(txt_quantity.getText());
				
		} else if(label_item4.getText().isBlank() && label_item1.getText()!="Groundnut" && label_item2.getText()!="Groundnut" 
					&&label_item3.getText()!="Groundnut" &&label_item4.getText()!="Groundnut" &&label_item5.getText()!="Groundnut") {
				label_item4.setText(itemSelected);
				label_price4.setText(totalSet);
				label_quantity4.setText(txt_quantity.getText());
				
		} else if(label_item5.getText().isBlank() && label_item1.getText()!="Groundnut" && label_item2.getText()!="Groundnut" 
					&&label_item5.getText()!="Groundnut" &&label_item4.getText()!="Groundnut" &&label_item5.getText()!="Groundnut") {
				label_item5.setText(itemSelected);
				label_price5.setText(totalSet);
				label_quantity5.setText(txt_quantity.getText());
		}
		
		//Check if selected item is the newly added item
		} else 
		{
		if(label_item1.getText().isBlank() && label_item1.getText()!=txt_newItem.getText() && label_item2.getText()!=txt_newItem.getText()
				&&label_item3.getText()!=txt_newItem.getText() &&label_item4.getText()!=txt_newItem.getText() &&label_item5.getText()!=txt_newItem.getText()) {
			label_item1.setText(itemSelected);	
			label_price1.setText(totalSet);
			label_quantity1.setText(txt_quantity.getText());
			
		} else if(label_item2.getText().isBlank() && label_item1.getText()!=txt_newItem.getText() && label_item2.getText()!=txt_newItem.getText()
					&&label_item3.getText()!=txt_newItem.getText() &&label_item4.getText()!=txt_newItem.getText() &&label_item5.getText()!=txt_newItem.getText()) {
				label_item2.setText(itemSelected);	
				label_price2.setText(totalSet);
				label_quantity2.setText(txt_quantity.getText());
				
		} else if(label_item3.getText().isBlank() && label_item1.getText()!=txt_newItem.getText() && label_item2.getText()!=txt_newItem.getText() 
					&&label_item3.getText()!=txt_newItem.getText() &&label_item4.getText()!=txt_newItem.getText() &&label_item5.getText()!=txt_newItem.getText()) {
				label_item3.setText(itemSelected);
				label_price3.setText(totalSet);
				label_quantity3.setText(txt_quantity.getText());
				
		} else if(label_item4.getText().isBlank() && label_item1.getText()!=txt_newItem.getText() && label_item2.getText()!=txt_newItem.getText()
					&&label_item3.getText()!=txt_newItem.getText() &&label_item4.getText()!=txt_newItem.getText() &&label_item5.getText()!=txt_newItem.getText()) {
				label_item4.setText(itemSelected);
				label_price4.setText(totalSet);
				label_quantity4.setText(txt_quantity.getText());
				
		} else if(label_item5.getText().isBlank() && label_item1.getText()!=txt_newItem.getText() && label_item2.getText()!=txt_newItem.getText() 
					&&label_item5.getText()!=txt_newItem.getText() &&label_item4.getText()!=txt_newItem.getText() &&label_item5.getText()!=txt_newItem.getText()) {
				label_item5.setText(itemSelected);
				label_price5.setText(totalSet);
				label_quantity5.setText(txt_quantity.getText());
			}
		}

}
	// Event Listener on Button[#btn_delete].onAction
	@FXML
	public void deleteItem(ActionEvent event) {
		// TODO Autogenerated
		
	}
	
	  @FXML
	    void sum(ActionEvent event) {
		  Double p1, p2, p3, p4, p5;
		 
		if(label_price1.getText()!="") {
			p1 = Double.parseDouble(label_price1.getText());
		} else
		{
			p1 = 0.0;
		}
		
		if(label_price2.getText()!="") {
			p2 = Double.parseDouble(label_price2.getText());
		} else
		{
			p2 = 0.0;
		}
		
		if(label_price3.getText()!="") {
			p3 = Double.parseDouble(label_price3.getText());
		} else
		{
			p3 = 0.0;
		}
		
		if(label_price4.getText()!="") {
			p4 = Double.parseDouble(label_price4.getText());
		} else
		{
			p4 = 0.0;
		}
		
		if(label_price5.getText()!="") {
			p5 = Double.parseDouble(label_price5.getText());
		} else
		{
			p5 = 0.0;
		}
		grandTotal = p1 + p2 + p3 + p4 + p5;;
		String gTotal = String.valueOf(grandTotal);
		label_grandTotal.setText(gTotal);
		 
	    
	  }
	  
	  @FXML
	    void Quantity(ActionEvent event) {

	    }
	  
	  @FXML
	    void removeItem(ActionEvent event) {
		  
		  comboBox_items.getItems().remove(itemSelected);
		  label_price.setText("0");
	  }
	  
	  
	  @FXML
	    void newItem(ActionEvent event) {

	    }
	//The code below enable a code under here to run without clicking a button
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		
		//Add string to LinkedList
		ShopItems.add("Sardine");
		ShopItems.add("Egg");
		ShopItems.add("Groundnut");
		
		//set ComboBox to LinkedList
		comboBox_items.getItems().addAll(ShopItems);
		
	}
	
}
